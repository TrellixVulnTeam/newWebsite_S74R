var myArr = [
    ["What is Signal", "A signal is a function, that represents the variation of a physical quantity with respect to any parameter (generally time or distance)"],
    ["What is signal in electrical & electronics", "usually signal is variation of electrical quantity (gen. I n V with time)"],
    ["Difference between Analog signal and Digital signal", "with Analog signal, we can have every value (including intermedite value), but we cannot with digital signal"],
    ["Discrete Time Signal", "the signal which is defined for the descrete intervals of time, is the subset of analog signal"],
    ["Digital signal", "desctritise both time and magnitude, we devide the magnitude axis in to fixed number of levels and the signal can take value equal to these levels only"],
    ["How to overcome/reduce error in digital signal", "increasing the number of level"],
    ["All real life signals are?", "analog"],
    ["why we use digital signal in communication process", "to minimize the effect of noise"],
    ["what is noise", "unwanted signal"],
    ["Transmitter (Tx)", "to transmit the signal"],
    ["Rexceiver (Rx)", "to receive the signal"],
    ["What type of noise the digital signal is good for", "small value of noise"],
    ["why we use digital signal in data transmission and storage", "because of efficiency and cost reduce"],
    ["hierarchy of Digital system", "Digital system, sub systems, modul, basic unit (logic gate), circuit (transistor, resistor, capasitor)"],
    ["advantages of digital system", "Noise immunity, uses less bandwidth, encriyption, efficiency higher for long distance transmission"],
    ["What is Boolean Algebra", "is the set of rules used to simplify the given logic expression without changing its functionality, it is used when number of variable are less (1,2,3)"],
    ["Boolean algebra of AND", "A.A = A ; A.0 = 0; A.1 = A ; A.A' = 0"],
    ["Boolean algebra of OR", "A+A = A ; A+0 = A; A+1 = 1; A+A' = 1"],
    ["Rules of Boolean Algebra", "1. Complement, 2. AND, 3. OR, 4. Distributive law, 5. Commutative law, 6. Associative law, 7. de morgans law"],
    ["Distributive law of A+(B.C)", "A.B + A.C"],
    ["Distributive law of A.(B+C)", "A+B . A+C"],
    ["Distributive law of A+A'B", "A+B"],
    ["Distributive law of A'+AB", "A'+B"],
    ["Commutative law of Boolean Algebra", "A+B = B+A; A.B = B.A"],
    ["Associative law of Boolean Algebra", "(A.B).C = A.(B.C)"],
    ["Priority of Boolean Algebra", "NOT, AND, OR"],
    ["De Morgans of Boolean Algebra", "(A+B)' = A'.B' ; (A.B)' = A'+B'"],
    ["Redundancy Theorem", "consenses theorem, three variables, each variable is repeated twice, one variable is complemented, take the complemented variable, ex: AB + A'C + BC = AB + A'C"],
    ["SoP form", "Sum of Product Form"],
    ["two type of SoP form", "Canonical which is Writing directly from the Truth Table, and minimal which is minimize form"],
    ["PoS form", "Product of Sum Form"],
    ["Standar or Canonical SoP Form", "Each minterm is having all the variables in normal or complimented form, ex: F = A'B + AB + A'B'"],
    ["Minimal SoP Form", "Each minterm does not have all the variables in normal or complimented form, ex: A + B'C"],
    ["minterm : maxterm", "a.b : a+b"],
    ["when the SoP Form is used", "when the output is '1'"],
    ["when the PoS Form is used", "when the output is '0'"],
    ["Difference SoP and PoS Form", "PoS: 0 => A, 1 => A', SoP: 0 => A', 1 => A; PoS: Y = (A+B).(A+B'), SoP: Y = (A.B)+(A.B')"],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],
    ["", ""],


];